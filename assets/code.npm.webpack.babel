npm init

{
  "name": "apod_reactified",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": "",
  "license": "ISC"
}


npm install --save-dev webpack
npm install --save-dev babel-core babel-loader babel-preset-es2015 babel-preset-stage-0 babel-preset-react
npm install --save-dev react react-dom

  mkdir src public
  touch webpack.config.js .babelrc
  touch src/index.js public/index.html

  nano public/index.html
    // webpack will now place bundle.js in /public/js/
    // lets create an html file to use bundle.js
    <html>
      <head>
        <meta charset="utf-8">
        <title>React.js using NPM, Babel6 and Webpack</title>
      </head>
      <body>
        <div id="app" />
        <script src="bundle.js" type="text/javascript"></script>
      </body>
    </html>

  nano src/index.js
    console.log('Satellites are very expensive')

// basic config babel enable to es6 and react plugins
  touch .babelrc
    {
      "presets" : ["es2015", "react"]
    }

// basic config webpack
  var webpack = require('webpack');
  var path = require('path');

  var BUILD_DIR = path.resolve(__dirname, 'public/');
  var APP_DIR = path.resolve(__dirname, 'src/');

  var config = {
    entry: APP_DIR + 'index.jsx',
    output: {
      path: BUILD_DIR,
      filename: 'bundle.js'
    }
  };

  module.exports = config;

// webpack will now place bundle.js in /public/js/
// lets create an html file to use bundle.js

  ./node_modules/.bin/webpack -d
  open public/index.html

// Finally, ReactJs

  nano src/index.js
    // now lets update index.jsx -> index.js
      import React from 'react';
      import {render} from 'react-dom';

      class Apod extends React.Component {
        render () {
          return <p> Hello React!</p>;
        }
      }

      render(<Apod/>, document.getElementById('app'));

    // try to run and see: You may need an appropriate loader to handle this file type.
    // lets add babel-loader to webpack.

// New slide Create your own boilerplate for a quick development phase
